/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LayoutRouteLazyImport = createFileRoute('/_layout')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutSettingsLazyImport = createFileRoute('/_layout/settings')()
const LayoutPackagesLazyImport = createFileRoute('/_layout/packages')()
const LayoutModulesLazyImport = createFileRoute('/_layout/modules')()
const ProjectsNameRouteLazyImport = createFileRoute('/projects/$name')()
const ProjectsNameIndexLazyImport = createFileRoute('/projects/$name/')()
const ProjectsNameTspackLazyImport = createFileRoute('/projects/$name/tspack')()
const ProjectsNameTablesLazyImport = createFileRoute('/projects/$name/tables')()
const ProjectsNameServerLazyImport = createFileRoute('/projects/$name/server')()
const ProjectsNameSchemasLazyImport = createFileRoute(
  '/projects/$name/schemas',
)()
const ProjectsNameQueriesLazyImport = createFileRoute(
  '/projects/$name/queries',
)()
const ProjectsNameQ1LazyImport = createFileRoute('/projects/$name/q1')()
const ProjectsNameGomodLazyImport = createFileRoute('/projects/$name/gomod')()
const ProjectsNameGitLazyImport = createFileRoute('/projects/$name/git')()
const ProjectsNameEndpointsLazyImport = createFileRoute(
  '/projects/$name/endpoints',
)()
const ProjectsNameDeployLazyImport = createFileRoute('/projects/$name/deploy')()
const ProjectsNameClientsLazyImport = createFileRoute(
  '/projects/$name/clients',
)()
const ProjectsNameAuthLazyImport = createFileRoute('/projects/$name/auth')()
const ProjectsNameApexLazyImport = createFileRoute('/projects/$name/apex')()

// Create/Update Routes

const LayoutRouteLazyRoute = LayoutRouteLazyImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_layout/route.lazy').then((d) => d.Route))

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteLazyRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutSettingsLazyRoute = LayoutSettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_layout/settings.lazy').then((d) => d.Route),
)

const LayoutPackagesLazyRoute = LayoutPackagesLazyImport.update({
  id: '/packages',
  path: '/packages',
  getParentRoute: () => LayoutRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_layout/packages.lazy').then((d) => d.Route),
)

const LayoutModulesLazyRoute = LayoutModulesLazyImport.update({
  id: '/modules',
  path: '/modules',
  getParentRoute: () => LayoutRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_layout/modules.lazy').then((d) => d.Route),
)

const ProjectsNameRouteLazyRoute = ProjectsNameRouteLazyImport.update({
  id: '/projects/$name',
  path: '/projects/$name',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/route.lazy').then((d) => d.Route),
)

const ProjectsNameIndexLazyRoute = ProjectsNameIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/index.lazy').then((d) => d.Route),
)

const ProjectsNameTspackLazyRoute = ProjectsNameTspackLazyImport.update({
  id: '/tspack',
  path: '/tspack',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/tspack.lazy').then((d) => d.Route),
)

const ProjectsNameTablesLazyRoute = ProjectsNameTablesLazyImport.update({
  id: '/tables',
  path: '/tables',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/tables.lazy').then((d) => d.Route),
)

const ProjectsNameServerLazyRoute = ProjectsNameServerLazyImport.update({
  id: '/server',
  path: '/server',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/server.lazy').then((d) => d.Route),
)

const ProjectsNameSchemasLazyRoute = ProjectsNameSchemasLazyImport.update({
  id: '/schemas',
  path: '/schemas',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/schemas.lazy').then((d) => d.Route),
)

const ProjectsNameQueriesLazyRoute = ProjectsNameQueriesLazyImport.update({
  id: '/queries',
  path: '/queries',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/queries.lazy').then((d) => d.Route),
)

const ProjectsNameQ1LazyRoute = ProjectsNameQ1LazyImport.update({
  id: '/q1',
  path: '/q1',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/q1.lazy').then((d) => d.Route),
)

const ProjectsNameGomodLazyRoute = ProjectsNameGomodLazyImport.update({
  id: '/gomod',
  path: '/gomod',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/gomod.lazy').then((d) => d.Route),
)

const ProjectsNameGitLazyRoute = ProjectsNameGitLazyImport.update({
  id: '/git',
  path: '/git',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/git.lazy').then((d) => d.Route),
)

const ProjectsNameEndpointsLazyRoute = ProjectsNameEndpointsLazyImport.update({
  id: '/endpoints',
  path: '/endpoints',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/endpoints.lazy').then((d) => d.Route),
)

const ProjectsNameDeployLazyRoute = ProjectsNameDeployLazyImport.update({
  id: '/deploy',
  path: '/deploy',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/deploy.lazy').then((d) => d.Route),
)

const ProjectsNameClientsLazyRoute = ProjectsNameClientsLazyImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/clients.lazy').then((d) => d.Route),
)

const ProjectsNameAuthLazyRoute = ProjectsNameAuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/auth.lazy').then((d) => d.Route),
)

const ProjectsNameApexLazyRoute = ProjectsNameApexLazyImport.update({
  id: '/apex',
  path: '/apex',
  getParentRoute: () => ProjectsNameRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/projects/$name/apex.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/$name': {
      id: '/projects/$name'
      path: '/projects/$name'
      fullPath: '/projects/$name'
      preLoaderRoute: typeof ProjectsNameRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/modules': {
      id: '/_layout/modules'
      path: '/modules'
      fullPath: '/modules'
      preLoaderRoute: typeof LayoutModulesLazyImport
      parentRoute: typeof LayoutRouteLazyImport
    }
    '/_layout/packages': {
      id: '/_layout/packages'
      path: '/packages'
      fullPath: '/packages'
      preLoaderRoute: typeof LayoutPackagesLazyImport
      parentRoute: typeof LayoutRouteLazyImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsLazyImport
      parentRoute: typeof LayoutRouteLazyImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutRouteLazyImport
    }
    '/projects/$name/apex': {
      id: '/projects/$name/apex'
      path: '/apex'
      fullPath: '/projects/$name/apex'
      preLoaderRoute: typeof ProjectsNameApexLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/auth': {
      id: '/projects/$name/auth'
      path: '/auth'
      fullPath: '/projects/$name/auth'
      preLoaderRoute: typeof ProjectsNameAuthLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/clients': {
      id: '/projects/$name/clients'
      path: '/clients'
      fullPath: '/projects/$name/clients'
      preLoaderRoute: typeof ProjectsNameClientsLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/deploy': {
      id: '/projects/$name/deploy'
      path: '/deploy'
      fullPath: '/projects/$name/deploy'
      preLoaderRoute: typeof ProjectsNameDeployLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/endpoints': {
      id: '/projects/$name/endpoints'
      path: '/endpoints'
      fullPath: '/projects/$name/endpoints'
      preLoaderRoute: typeof ProjectsNameEndpointsLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/git': {
      id: '/projects/$name/git'
      path: '/git'
      fullPath: '/projects/$name/git'
      preLoaderRoute: typeof ProjectsNameGitLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/gomod': {
      id: '/projects/$name/gomod'
      path: '/gomod'
      fullPath: '/projects/$name/gomod'
      preLoaderRoute: typeof ProjectsNameGomodLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/q1': {
      id: '/projects/$name/q1'
      path: '/q1'
      fullPath: '/projects/$name/q1'
      preLoaderRoute: typeof ProjectsNameQ1LazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/queries': {
      id: '/projects/$name/queries'
      path: '/queries'
      fullPath: '/projects/$name/queries'
      preLoaderRoute: typeof ProjectsNameQueriesLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/schemas': {
      id: '/projects/$name/schemas'
      path: '/schemas'
      fullPath: '/projects/$name/schemas'
      preLoaderRoute: typeof ProjectsNameSchemasLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/server': {
      id: '/projects/$name/server'
      path: '/server'
      fullPath: '/projects/$name/server'
      preLoaderRoute: typeof ProjectsNameServerLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/tables': {
      id: '/projects/$name/tables'
      path: '/tables'
      fullPath: '/projects/$name/tables'
      preLoaderRoute: typeof ProjectsNameTablesLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/tspack': {
      id: '/projects/$name/tspack'
      path: '/tspack'
      fullPath: '/projects/$name/tspack'
      preLoaderRoute: typeof ProjectsNameTspackLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
    '/projects/$name/': {
      id: '/projects/$name/'
      path: '/'
      fullPath: '/projects/$name/'
      preLoaderRoute: typeof ProjectsNameIndexLazyImport
      parentRoute: typeof ProjectsNameRouteLazyImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteLazyRouteChildren {
  LayoutModulesLazyRoute: typeof LayoutModulesLazyRoute
  LayoutPackagesLazyRoute: typeof LayoutPackagesLazyRoute
  LayoutSettingsLazyRoute: typeof LayoutSettingsLazyRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
}

const LayoutRouteLazyRouteChildren: LayoutRouteLazyRouteChildren = {
  LayoutModulesLazyRoute: LayoutModulesLazyRoute,
  LayoutPackagesLazyRoute: LayoutPackagesLazyRoute,
  LayoutSettingsLazyRoute: LayoutSettingsLazyRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
}

const LayoutRouteLazyRouteWithChildren = LayoutRouteLazyRoute._addFileChildren(
  LayoutRouteLazyRouteChildren,
)

interface ProjectsNameRouteLazyRouteChildren {
  ProjectsNameApexLazyRoute: typeof ProjectsNameApexLazyRoute
  ProjectsNameAuthLazyRoute: typeof ProjectsNameAuthLazyRoute
  ProjectsNameClientsLazyRoute: typeof ProjectsNameClientsLazyRoute
  ProjectsNameDeployLazyRoute: typeof ProjectsNameDeployLazyRoute
  ProjectsNameEndpointsLazyRoute: typeof ProjectsNameEndpointsLazyRoute
  ProjectsNameGitLazyRoute: typeof ProjectsNameGitLazyRoute
  ProjectsNameGomodLazyRoute: typeof ProjectsNameGomodLazyRoute
  ProjectsNameQ1LazyRoute: typeof ProjectsNameQ1LazyRoute
  ProjectsNameQueriesLazyRoute: typeof ProjectsNameQueriesLazyRoute
  ProjectsNameSchemasLazyRoute: typeof ProjectsNameSchemasLazyRoute
  ProjectsNameServerLazyRoute: typeof ProjectsNameServerLazyRoute
  ProjectsNameTablesLazyRoute: typeof ProjectsNameTablesLazyRoute
  ProjectsNameTspackLazyRoute: typeof ProjectsNameTspackLazyRoute
  ProjectsNameIndexLazyRoute: typeof ProjectsNameIndexLazyRoute
}

const ProjectsNameRouteLazyRouteChildren: ProjectsNameRouteLazyRouteChildren = {
  ProjectsNameApexLazyRoute: ProjectsNameApexLazyRoute,
  ProjectsNameAuthLazyRoute: ProjectsNameAuthLazyRoute,
  ProjectsNameClientsLazyRoute: ProjectsNameClientsLazyRoute,
  ProjectsNameDeployLazyRoute: ProjectsNameDeployLazyRoute,
  ProjectsNameEndpointsLazyRoute: ProjectsNameEndpointsLazyRoute,
  ProjectsNameGitLazyRoute: ProjectsNameGitLazyRoute,
  ProjectsNameGomodLazyRoute: ProjectsNameGomodLazyRoute,
  ProjectsNameQ1LazyRoute: ProjectsNameQ1LazyRoute,
  ProjectsNameQueriesLazyRoute: ProjectsNameQueriesLazyRoute,
  ProjectsNameSchemasLazyRoute: ProjectsNameSchemasLazyRoute,
  ProjectsNameServerLazyRoute: ProjectsNameServerLazyRoute,
  ProjectsNameTablesLazyRoute: ProjectsNameTablesLazyRoute,
  ProjectsNameTspackLazyRoute: ProjectsNameTspackLazyRoute,
  ProjectsNameIndexLazyRoute: ProjectsNameIndexLazyRoute,
}

const ProjectsNameRouteLazyRouteWithChildren =
  ProjectsNameRouteLazyRoute._addFileChildren(
    ProjectsNameRouteLazyRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteLazyRouteWithChildren
  '/projects/$name': typeof ProjectsNameRouteLazyRouteWithChildren
  '/modules': typeof LayoutModulesLazyRoute
  '/packages': typeof LayoutPackagesLazyRoute
  '/settings': typeof LayoutSettingsLazyRoute
  '/': typeof LayoutIndexLazyRoute
  '/projects/$name/apex': typeof ProjectsNameApexLazyRoute
  '/projects/$name/auth': typeof ProjectsNameAuthLazyRoute
  '/projects/$name/clients': typeof ProjectsNameClientsLazyRoute
  '/projects/$name/deploy': typeof ProjectsNameDeployLazyRoute
  '/projects/$name/endpoints': typeof ProjectsNameEndpointsLazyRoute
  '/projects/$name/git': typeof ProjectsNameGitLazyRoute
  '/projects/$name/gomod': typeof ProjectsNameGomodLazyRoute
  '/projects/$name/q1': typeof ProjectsNameQ1LazyRoute
  '/projects/$name/queries': typeof ProjectsNameQueriesLazyRoute
  '/projects/$name/schemas': typeof ProjectsNameSchemasLazyRoute
  '/projects/$name/server': typeof ProjectsNameServerLazyRoute
  '/projects/$name/tables': typeof ProjectsNameTablesLazyRoute
  '/projects/$name/tspack': typeof ProjectsNameTspackLazyRoute
  '/projects/$name/': typeof ProjectsNameIndexLazyRoute
}

export interface FileRoutesByTo {
  '/modules': typeof LayoutModulesLazyRoute
  '/packages': typeof LayoutPackagesLazyRoute
  '/settings': typeof LayoutSettingsLazyRoute
  '/': typeof LayoutIndexLazyRoute
  '/projects/$name/apex': typeof ProjectsNameApexLazyRoute
  '/projects/$name/auth': typeof ProjectsNameAuthLazyRoute
  '/projects/$name/clients': typeof ProjectsNameClientsLazyRoute
  '/projects/$name/deploy': typeof ProjectsNameDeployLazyRoute
  '/projects/$name/endpoints': typeof ProjectsNameEndpointsLazyRoute
  '/projects/$name/git': typeof ProjectsNameGitLazyRoute
  '/projects/$name/gomod': typeof ProjectsNameGomodLazyRoute
  '/projects/$name/q1': typeof ProjectsNameQ1LazyRoute
  '/projects/$name/queries': typeof ProjectsNameQueriesLazyRoute
  '/projects/$name/schemas': typeof ProjectsNameSchemasLazyRoute
  '/projects/$name/server': typeof ProjectsNameServerLazyRoute
  '/projects/$name/tables': typeof ProjectsNameTablesLazyRoute
  '/projects/$name/tspack': typeof ProjectsNameTspackLazyRoute
  '/projects/$name': typeof ProjectsNameIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteLazyRouteWithChildren
  '/projects/$name': typeof ProjectsNameRouteLazyRouteWithChildren
  '/_layout/modules': typeof LayoutModulesLazyRoute
  '/_layout/packages': typeof LayoutPackagesLazyRoute
  '/_layout/settings': typeof LayoutSettingsLazyRoute
  '/_layout/': typeof LayoutIndexLazyRoute
  '/projects/$name/apex': typeof ProjectsNameApexLazyRoute
  '/projects/$name/auth': typeof ProjectsNameAuthLazyRoute
  '/projects/$name/clients': typeof ProjectsNameClientsLazyRoute
  '/projects/$name/deploy': typeof ProjectsNameDeployLazyRoute
  '/projects/$name/endpoints': typeof ProjectsNameEndpointsLazyRoute
  '/projects/$name/git': typeof ProjectsNameGitLazyRoute
  '/projects/$name/gomod': typeof ProjectsNameGomodLazyRoute
  '/projects/$name/q1': typeof ProjectsNameQ1LazyRoute
  '/projects/$name/queries': typeof ProjectsNameQueriesLazyRoute
  '/projects/$name/schemas': typeof ProjectsNameSchemasLazyRoute
  '/projects/$name/server': typeof ProjectsNameServerLazyRoute
  '/projects/$name/tables': typeof ProjectsNameTablesLazyRoute
  '/projects/$name/tspack': typeof ProjectsNameTspackLazyRoute
  '/projects/$name/': typeof ProjectsNameIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/projects/$name'
    | '/modules'
    | '/packages'
    | '/settings'
    | '/'
    | '/projects/$name/apex'
    | '/projects/$name/auth'
    | '/projects/$name/clients'
    | '/projects/$name/deploy'
    | '/projects/$name/endpoints'
    | '/projects/$name/git'
    | '/projects/$name/gomod'
    | '/projects/$name/q1'
    | '/projects/$name/queries'
    | '/projects/$name/schemas'
    | '/projects/$name/server'
    | '/projects/$name/tables'
    | '/projects/$name/tspack'
    | '/projects/$name/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/modules'
    | '/packages'
    | '/settings'
    | '/'
    | '/projects/$name/apex'
    | '/projects/$name/auth'
    | '/projects/$name/clients'
    | '/projects/$name/deploy'
    | '/projects/$name/endpoints'
    | '/projects/$name/git'
    | '/projects/$name/gomod'
    | '/projects/$name/q1'
    | '/projects/$name/queries'
    | '/projects/$name/schemas'
    | '/projects/$name/server'
    | '/projects/$name/tables'
    | '/projects/$name/tspack'
    | '/projects/$name'
  id:
    | '__root__'
    | '/_layout'
    | '/projects/$name'
    | '/_layout/modules'
    | '/_layout/packages'
    | '/_layout/settings'
    | '/_layout/'
    | '/projects/$name/apex'
    | '/projects/$name/auth'
    | '/projects/$name/clients'
    | '/projects/$name/deploy'
    | '/projects/$name/endpoints'
    | '/projects/$name/git'
    | '/projects/$name/gomod'
    | '/projects/$name/q1'
    | '/projects/$name/queries'
    | '/projects/$name/schemas'
    | '/projects/$name/server'
    | '/projects/$name/tables'
    | '/projects/$name/tspack'
    | '/projects/$name/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRouteLazyRoute: typeof LayoutRouteLazyRouteWithChildren
  ProjectsNameRouteLazyRoute: typeof ProjectsNameRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteLazyRoute: LayoutRouteLazyRouteWithChildren,
  ProjectsNameRouteLazyRoute: ProjectsNameRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/projects/$name"
      ]
    },
    "/_layout": {
      "filePath": "_layout/route.lazy.tsx",
      "children": [
        "/_layout/modules",
        "/_layout/packages",
        "/_layout/settings",
        "/_layout/"
      ]
    },
    "/projects/$name": {
      "filePath": "projects/$name/route.lazy.tsx",
      "children": [
        "/projects/$name/apex",
        "/projects/$name/auth",
        "/projects/$name/clients",
        "/projects/$name/deploy",
        "/projects/$name/endpoints",
        "/projects/$name/git",
        "/projects/$name/gomod",
        "/projects/$name/q1",
        "/projects/$name/queries",
        "/projects/$name/schemas",
        "/projects/$name/server",
        "/projects/$name/tables",
        "/projects/$name/tspack",
        "/projects/$name/"
      ]
    },
    "/_layout/modules": {
      "filePath": "_layout/modules.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/packages": {
      "filePath": "_layout/packages.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/projects/$name/apex": {
      "filePath": "projects/$name/apex.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/auth": {
      "filePath": "projects/$name/auth.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/clients": {
      "filePath": "projects/$name/clients.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/deploy": {
      "filePath": "projects/$name/deploy.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/endpoints": {
      "filePath": "projects/$name/endpoints.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/git": {
      "filePath": "projects/$name/git.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/gomod": {
      "filePath": "projects/$name/gomod.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/q1": {
      "filePath": "projects/$name/q1.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/queries": {
      "filePath": "projects/$name/queries.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/schemas": {
      "filePath": "projects/$name/schemas.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/server": {
      "filePath": "projects/$name/server.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/tables": {
      "filePath": "projects/$name/tables.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/tspack": {
      "filePath": "projects/$name/tspack.lazy.tsx",
      "parent": "/projects/$name"
    },
    "/projects/$name/": {
      "filePath": "projects/$name/index.lazy.tsx",
      "parent": "/projects/$name"
    }
  }
}
ROUTE_MANIFEST_END */
